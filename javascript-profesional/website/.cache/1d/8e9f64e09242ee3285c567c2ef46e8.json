{"id":"ejercicios/this.html","dependencies":[{"name":"C:\\Users\\juan.ospina\\Desktop\\cursos\\Fase1_Semillero\\javascript-profesional\\website\\package.json","includedInParent":true,"mtime":1646673165736}],"generated":{"html":"<html>\r\n  <head>\r\n    <title>this</title>\r\n  </head>\r\n\r\n  <body>\r\n    <a href=\"/ejercicios/\">Go back</a>\r\n    <p><em>Abre la consola</em></p>\r\n\r\n    <h1>\r\n      <code>this</code> se refiere a un objeto. Ese objeto es el que actualmente\r\n      está ejecutando un pedazo de código.\r\n    </h1>\r\n\r\n    <script>// this en el scope global\nconsole.log(`this: ${this}`); // this en el scope de una función\n\nfunction whoIsThis() {\n  return this;\n}\n\nconsole.log(`whoIsThis(): ${whoIsThis()}`); // this en el scope de una función en strict mode\n\nfunction whoIsThisStrict() {\n  'use strict';\n\n  return this;\n}\n\nconsole.log(`whoIsThisStrict(): ${whoIsThisStrict()}`); // this en el contexto de un objeto\n\nconst person = {\n  name: 'Gabriel',\n  saludar: function () {\n    console.log(`Hola soy ${this.name}`);\n  }\n};\nperson.saludar(); // this cuando sacamos a una función de un objeto\n\nconst accion = person.saludar;\naccion(); // this en el contexto de una \"clase\"\n\nfunction Person(name) {\n  // this = {}\n  this.name = name;\n}\n\nPerson.prototype.saludar = function () {\n  console.log(`Me llamo ${this.name}`);\n};\n\nconst angela = new Person('Angela');\nangela.saludar();</script>\r\n  </body>\r\n</html>\r\n"},"sourceMaps":null,"error":null,"hash":"6b82d6bb30b5d6fd76e13f7f2b0bbee6","cacheData":{"env":{}}}